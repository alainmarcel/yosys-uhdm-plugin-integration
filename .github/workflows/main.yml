name: 'main'

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  build-binaries:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:bionic
    env:
      CC: gcc-9
      CXX: g++-9
      CCACHE_DIR: "/root/yosys-uhdm-plugin-integration/yosys-uhdm-plugin-integration/.cache/"
      DEBIAN_FRONTEND: noninteractive
      GHA_EXTERNAL_DISK: "tools"
      GHA_MACHINE_TYPE: "n2-highmem-4"

    steps:

    - name: Install dependencies
      run: |
        apt-get update -qq
        apt install -y software-properties-common
        add-apt-repository ppa:ubuntu-toolchain-r/test
        apt-get update -qq
        apt install -y gcc-9 g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev python3-pip uuid uuid-dev tcl-dev flex libfl-dev git pkg-config libreadline-dev bison libffi-dev wget ccache
        update-alternatives --install /usr/bin/python python /usr/bin/python3 1
        update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
        pip install orderedmultidict



    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Create Cache Timestamp
      id: cache_timestamp
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYY-MM-DD-HH-mm-ss'

    - name: Setup cache
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: cache_${{ steps.cache_timestamp.outputs.time }}
        restore-keys: cache_

    - name: Build binaries
      run: |
        # ubuntu bionic have too old cmake, install one from pip
        pip install cmake
        # Github dropped support for unauthorized git: https://github.blog/2021-09-01-improving-git-protocol-security-github/
        # Make sure we always use https:// instead of git://
        git config --global url.https://github.com/.insteadOf git://github.com/
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cd yosys && git apply ../yosys-patches/* && cd ..
        ./build_binaries.sh
        # By default actions/upload-artifact@v2 do not preserve file permissions
        # tar directory to workaround this issue
        # See https://github.com/actions/upload-artifact/issues/38
        tar -cvf binaries.tar image

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          binaries.tar

    - name: Upload load graphs
      uses: actions/upload-artifact@v2
      with:
        name: plots
        path: |
          **/plot_*.svg

  generate-matrix-yosys:
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:bionic
    outputs:
      matrix: ${{ steps.generate-matrix-yosys.outputs.matrix }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          apt install -y python3
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Generate OOM
        id: generate-matrix-yosys
        run: |
          cat /dev/zero | head -c 20G | tail
